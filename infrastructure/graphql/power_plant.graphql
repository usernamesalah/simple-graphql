type Query {
  powerPlant(id: ID!): PowerPlant
  powerPlants(page: Int = 1, pageSize: Int = 10): PowerPlantPage!
}

type Mutation {
  createPowerPlant(name: String!, latitude: Float!, longitude: Float!): PowerPlant!
  updatePowerPlant(id: ID!, name: String, latitude: Float, longitude: Float): PowerPlant!
}

type PowerPlantPage {
  plants: [PowerPlant!]!
  totalCount: Int!
  page: Int!
  pageSize: Int!
}

type PowerPlant {
  "ID of the power plant"
  id: ID!
  "Name of the power plant"
  name: String!
  "Latitude in degrees"
  latitude: Float!
  "Longitude in degrees"
  longitude: Float!
  "Provided forecasts from openmeteo for the weather"
  weatherForecasts(forecastDays: Int = 7): [WeatherForecast!]!
  "Is there precipitation at the power plant today?"
  hasPrecipitationToday: Boolean!
  "Elevation of the power plant"
  elevation: Float!
}

type WeatherForecast {
  "Time of the forecast in UTC/GMT"
  time: String!
  "Temperature (2 m) in celsius"
  temperature: Float!
  "Precipitation (rain + showers + snow) in millimeter"
  precipitation: Float!
  "Wind Speed (10 m) in Km/h"
  windSpeed: Float!
  "Wind Direction (10 m) in degrees"
  windDirection: Float!
}
